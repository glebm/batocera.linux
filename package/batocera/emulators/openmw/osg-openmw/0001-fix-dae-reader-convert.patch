From 1d1cb9a347deca62e16f3ae3aaecae03113d3b76 Mon Sep 17 00:00:00 2001
From: Gleb Mazovetskiy <glex.spb@gmail.com>
Date: Thu, 14 Jan 2021 00:06:46 +0000
Subject: [PATCH] daeReader::convert( std::istream& ) fixes

1. Pass a \0-terminated C-string to `_dae->openFromMemory` (fixes #994)
2. Use a heap array instead of a vector. This avoid unnecessary filling
   of the array with zeroes.
3. Correctly get the input stream size by subtracting the position of
   the beginning of the stream.
4. Handle stream error.
---
 src/osgPlugins/dae/daeReader.cpp | 25 +++++++++++++++++++------
 1 file changed, 19 insertions(+), 6 deletions(-)

diff --git a/src/osgPlugins/dae/daeReader.cpp b/src/osgPlugins/dae/daeReader.cpp
index 282389fd0aa..80da5dcfe44 100644
--- a/src/osgPlugins/dae/daeReader.cpp
+++ b/src/osgPlugins/dae/daeReader.cpp
@@ -12,6 +12,9 @@
  */
 
 #include "daeReader.h"
+
+#include <cstddef>
+
 #include <dae.h>
 #include <dae/domAny.h>
 #include <dom/domCOLLADA.h>
@@ -294,17 +297,27 @@ bool daeReader::convert( std::istream& fin )
 
     // get the size of the file and rewind
     fin.seekg(0, std::ios::end);
-    std::streampos length = fin.tellg();
+    const std::streampos fin_end = fin.tellg();
     fin.seekg(0, std::ios::beg);
+    const std::size_t length = fin_end - fin.tellg();
 
-    // use a vector as buffer and read from stream
-    std::vector<char> buffer(length);
-    fin.read(&buffer[0], length);
+    char *const buffer = new char[length + 1];
+    fin.read(buffer, length);
+    buffer[length] = '\0';
 
-    domElement* loaded_element = _dae->openFromMemory(fileURI, &buffer[0]);
+    if (fin.fail()) {
+        OSG_WARN << "daeReader::convert: Failed to read istream" << std::endl;
+        delete[] buffer;
+        return false;
+    }
+
+    domElement* loaded_element = _dae->openFromMemory(fileURI, buffer);
     _document = dynamic_cast<domCOLLADA*>(loaded_element);
 
-    return processDocument (fileURI);
+    const bool ok = processDocument (fileURI);
+
+    delete[] buffer;
+    return ok;
 }
 
 bool daeReader::convert( const std::string &fileURI )
